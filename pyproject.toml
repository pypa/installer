[build-system]
build-backend = "flit_core.buildapi"
requires = [
    "flit_core<4,>=3.2",
]

[project]
name = "installer"
readme = "README.md"
authors = [
    { name = "Pradyun Gedam", email = "pradyunsg@gmail.com" },
]
requires-python = ">=3.9"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = [
    "description",
    "version",
]
[project.urls]
"GitHub" = "https://github.com/pypa/installer"

[tool.ruff]
fix = true
extend-exclude = [
    "noxfile.py",
    "docs/*",
]

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
    "D",   # pydocstyle
    "PTH", # flake8-use-pathlib
    "ISC", # implicit-str-concat
    "W",   # pycodestyle warnings
]
ignore = [
    "D105",
    "D203",
    "D213",
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "E501",
    "N818",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]
"tools/*" = ["D", "T20"]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
]

[tool.mypy]
files = "src,tools"
strict = true
warn_unreachable = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
